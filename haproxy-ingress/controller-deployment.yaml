# Source: haproxy-ingress/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: haproxy-ingress-controller
    chart: haproxy-ingress-0.0.28
    component: "controller"
    release: haproxy-ingress
    heritage: Helm
  name: haproxy-ingress-controller
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 0
  selector:
    matchLabels:
      app: haproxy-ingress-controller
      component: "controller"
      release: haproxy-ingress
  template:
    metadata:
      annotations:
      labels:
        app: haproxy-ingress-controller
        component: "controller"
        release: haproxy-ingress
    spec:
      serviceAccountName: haproxy-ingress
      containers:
        - name: haproxy-ingress
          image:  "quay.io/jcmoraisjr/haproxy-ingress:v0.7.2"
          imagePullPolicy: "IfNotPresent"
          args:
            - --configmap=default/haproxy-ingress-controller
            - --ingress-class=haproxy
            - --sort-backends
            - --default-backend-service=default/haproxy-ingress-default-backend
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: healthz
              containerPort: 10253
          livenessProbe:
            httpGet:
              path: "/healthz"
              port: 10253
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: "/healthz"
              port: 10253
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            {}
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      hostNetwork: false
---
