# Source: druid/templates/middleManager/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: druid
    chart: druid-0.2.18
    component: middle-manager
    heritage: Helm
    release: druid
  name: druid-middle-manager
spec:
  serviceName: druid-middle-manager
  replicas: 1
  selector:
    matchLabels:
      app: druid
      release: druid
      component: middle-manager
  template:
    metadata:
      labels:
        app: druid
        component: middle-manager
        release: druid
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "druid"
                  release: "druid"
                  component: "middle-manager"
      securityContext:
        fsGroup: 1000
      containers:
      - name: druid
        args: [ "middleManager" ]
        env:
        - name: DRUID_XMS
          value: "64m"
        - name: DRUID_XMX
          value: "64m"
        - name: druid_indexer_fork_property_druid_processing_buffer_sizeBytes
          value: "25000000"
        - name: druid_indexer_runner_javaOptsArray
          value: "[\"-server\", \"-Xms256m\", \"-Xmx256m\", \"-XX:MaxDirectMemorySize=300m\", \"-Duser.timezone=UTC\", \"-Dfile.encoding=UTF-8\", \"-XX:+ExitOnOutOfMemoryError\", \"-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager\"]"
        envFrom:
          - configMapRef:
              name: druid 
        resources:
            {}
        livenessProbe:
          initialDelaySeconds: 60
          httpGet:
            path: /status/health
            port: 8091
        readinessProbe:
          initialDelaySeconds: 60
          httpGet:
            path: /status/health
            port: 8091
        image: "apache/druid:0.19.0"
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 8091
          name: http
        volumeMounts:
        - mountPath: /opt/druid/var/druid/
          name: data
      volumes:
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "4Gi"
